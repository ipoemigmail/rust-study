#!/usr/bin/env run-cargo-script
//! This is a regular crate doc comment, but it also contains a partial
//! Cargo manifest.  Note the use of a *fenced* code block, and the
//! `cargo` "language".
//!
//! ```cargo
//! [package]
//! edition = "2018"
//! [dependencies]
//! futures = "0.3"
//! tokio = { version="0.2", features=["full"]}
//! ```

use std::error::Error;
use tokio::prelude::*;
use tokio::time;
use std::time::Duration;
use futures::stream::{self, StreamExt};

#[tokio::main]
async fn main() -> Result<(), Box<dyn Error>> {
	let fibers: Vec<_> = (0..10000000).into_iter().map(|n| tokio::spawn(async move {
		time::delay_for(Duration::from_secs(1)).await;
		n
	})).collect();
	let results: Vec<_> = stream::iter(fibers).then(|f| async move { f.await }).collect().await;
	println!("{:?}", results.last());
	println!("Done");
	Ok(())
}

